{"version":3,"sources":["webpack:///./components/divider/demo/align-title.md","webpack:///./components/divider/demo/horizontal.md","webpack:///./components/divider/demo/vertical.md","webpack:///./components/divider/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"12.bundle.9f3c8aeb80e89384e737.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Align Title`}</h3>\n      <p>{`Set orientation of divider to left or right, default is `}<inlineCode parentName=\"p\">{`center`}</inlineCode>{`.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<>\n  <Divider align=\"left\">Left Text</Divider>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>\n  <Divider align=\"right\">Right Text</Divider>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>\n</>\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Horizontal`}</h3>\n      <p>{`Divider default type is `}<inlineCode parentName=\"p\">{`horizontal`}</inlineCode>{`. Support inner text inside Divider.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>\n  <Divider />\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>\n  <Divider>With Text</Divider>\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>\n  <Divider dashed />\n  <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed nonne merninisti licere mihi ista probare, quae sunt a te dicta? Refert tamen, quo modo.</p>\n</>\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Vertical`}</h3>\n      <p>{`Use `}<inlineCode parentName=\"p\">{`type=\"vertical\"`}</inlineCode>{` make it vertical.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<>\n  Text\n  <Divider type=\"vertical\" />\n  <a href=\"#\">Link</a>\n  <Divider type=\"vertical\" />\n  <a href=\"#\">Link</a>\n</>\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport AlignTitle from './demo/align-title.md'\nimport Horizontal from './demo/horizontal.md'\nimport Vertical from './demo/vertical.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Divider`}</h1>\n    <p>{`A divider line separates different content.`}</p>\n    <h2>{`Scenario`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Divide sections of article.`}</li>\n      <li parentName=\"ul\">{`Divide inline text and links such as the operation column of table.`}</li>\n    </ul>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Divider } from 'tiny-ui';\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Horizontal mdxType=\"Horizontal\" />\n    <Vertical mdxType=\"Vertical\" />\n  </column>\n  <column>\n    <AlignTitle mdxType=\"AlignTitle\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`type`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`direction type of divider`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`enum: `}<inlineCode parentName=\"td\">{`horizontal`}</inlineCode>{` `}<inlineCode parentName=\"td\">{`vertical`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`horizontal`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`dashed`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`whether line is dashed`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`align`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`position of title inside divider`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`enum: `}<inlineCode parentName=\"td\">{`left`}</inlineCode>{` `}<inlineCode parentName=\"td\">{`right`}</inlineCode>{` `}<inlineCode parentName=\"td\">{`center`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`center`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`style object of container\tobject`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`className of container`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`-`}</td>\n        </tr>\n      </tbody>\n    </table>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}