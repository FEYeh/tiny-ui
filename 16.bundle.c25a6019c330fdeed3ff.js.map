{"version":3,"sources":["webpack:///./components/input/demo/addon.md","webpack:///./components/input/demo/addon-button.md","webpack:///./components/input/demo/basic.md","webpack:///./components/input/demo/clearable.md","webpack:///./components/input/demo/pre-suf-fix.md","webpack:///./components/input/demo/size.md","webpack:///./components/input/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"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","file":"16.bundle.c25a6019c330fdeed3ff.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Addon`}</h3>\n      <p>{`Using `}<inlineCode parentName=\"p\">{`Addon`}</inlineCode>{` example.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Group, Addon } = Input;\n  \n  return (\n    <div style={{ width: 400 }}>\n      <Group>\n        <Addon>@</Addon>\n        <Input />\n      </Group>\n      <br/>\n      <Group>\n        <Input placeholder=\"your domain\" />\n        <Addon>.com</Addon>\n      </Group>\n      <br/>\n      <Group>\n        <Addon>$</Addon>\n        <Input />\n        <Addon>.00</Addon>\n      </Group>\n      <br/>\n      <Group>\n        <Input placeholder=\"From\"/>\n        <Addon>To</Addon>\n        <Input placeholder=\"Destination\"/>\n      </Group>\n      <br/>\n      <Group>\n        <Addon><Icon type=\"user\"/></Addon>\n        <Input placeholder=\"Your name\"/>\n      </Group>\n    </div>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Addon with Button`}</h3>\n      <p>{`Add a button in `}<inlineCode parentName=\"p\">{`Addon`}</inlineCode>{` component to compose an input form, like search function.`}</p>\n      <blockquote>\n        <p parentName=\"blockquote\">{`Pass `}<inlineCode parentName=\"p\">{`noBorder`}</inlineCode>{` prop to `}<inlineCode parentName=\"p\">{`Addon`}</inlineCode>{` component.`}</p>\n      </blockquote>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Group, Addon } = Input;\n  \n  return (\n    <div style={{ width: 400 }}>\n      <Group size=\"sm\">\n        <Input/>\n        <Addon noBorder>\n          <Button color=\"primary\" style={{borderTopLeftRadius: 0, borderBottomLeftRadius: 0, marginRight: 0}}>\n            <Icon type=\"search\"/>\n          </Button>\n        </Addon>\n      </Group>\n      <br/>\n      <Group>\n        <Input/>\n        <Addon noBorder>\n          <Button color=\"primary\" style={{borderTopLeftRadius: 0, borderBottomLeftRadius: 0, marginRight: 0}}>\n            <Icon type=\"search\"/>\n          </Button>\n        </Addon>\n      </Group>\n      <br/>\n      <Group size=\"lg\">\n        <Input/>\n        <Addon noBorder>\n          <Button color=\"primary\" style={{borderTopLeftRadius: 0, borderBottomLeftRadius: 0, marginRight: 0}}>\n            Search\n          </Button>\n        </Addon>\n      </Group>\n    </div>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Basic`}</h3>\n      <p>{`A simple usage.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<Input placeholder=\"Basic usage\" />\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`With clear icon`}</h3>\n      <p>{`Allow to clear all content.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<Input placeholder=\"input with clear icon\" clearable/>\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Prefix & Suffix`}</h3>\n      <p>{`Add prefix or suffix icons inside input.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Group, Addon } = Input;\n  \n  const searchOnClick = (e) => {\n    console.log(e);\n  }\n  \n  return (\n    <div style={{ width: 400 }}>\n      <Input prefix=\"@@@@\"/>\n      <br/>\n      <Input placeholder=\"your domain\" suffix=\".com\" />\n      <br/>\n      <Input prefix=\"$\" suffix=\".00\"/>\n      <br/>\n      <Input placeholder=\"Your name\" prefix={<Icon type=\"user\"/>}/>\n      \n      <h3>Suffix button</h3>\n      <Input \n        placeholder=\"your domain\" \n        suffix={<Icon type=\"search\" onClick={searchOnClick} style={{ cursor: 'pointer' }}/>}\n      />\n    </div>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Three sizes of Input`}</h3>\n      <p>{`There are three sizes of an Input box: `}<inlineCode parentName=\"p\">{`lg`}</inlineCode>{` (40px), `}<inlineCode parentName=\"p\">{`md`}</inlineCode>{` (32px) and `}<inlineCode parentName=\"p\">{`sm`}</inlineCode>{` (24px). The default size is `}<strong parentName=\"p\">{`md`}</strong>{`.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<div style={{ width: 400 }}>\n  <Input size=\"sm\" placeholder=\"Small size\" />\n  <br/>\n  <Input placeholder=\"Medium size\" />\n  <br/>\n  <Input size=\"lg\" placeholder=\"Large size\" />\n</div>\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Addon from './demo/addon.md'\nimport AddonButton from './demo/addon-button.md'\nimport Basic from './demo/basic.md'\nimport Clearable from './demo/clearable.md'\nimport PreSuffix from './demo/pre-suf-fix.md'\nimport Size from './demo/size.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Input`}</h1>\n    <p>{`A basic widget for getting the user input is a text field. Keyboard and mouse can be used for providing or changing data.`}</p>\n    <h2>{`Scenario`}</h2>\n    <p>{`A user input in a form field is needed.`}</p>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-js\"\n      }}>{`import { Input } from 'tiny-ui';\n\nconst { Group, Addon } = Input;\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n    <Addon mdxType=\"Addon\" />\n    <AddonButton mdxType=\"AddonButton\" />\n  </column>\n  <column>\n    <PreSuffix mdxType=\"PreSuffix\" />\n    <Size mdxType=\"Size\" />\n    <Clearable mdxType=\"Clearable\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}