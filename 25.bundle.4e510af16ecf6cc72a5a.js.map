{"version":3,"sources":["webpack:///./components/pop-confirm/demo/basic.md","webpack:///./components/pop-confirm/demo/placement.md","webpack:///./components/pop-confirm/demo/locale.md","webpack:///./components/pop-confirm/demo/icon.md","webpack:///./components/pop-confirm/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"srBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,+BACA,4CACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,oL,mkBAaXJ,EAAWK,gBAAiB,EC9B5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,mCACA,kEACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,+tG,mkBAgHXJ,EAAWK,gBAAiB,ECjI5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,qCACA,4BAAW,0BAAYC,WAAW,KAAvB,eAAX,QAA2E,0BAAYA,WAAW,KAAvB,cAA3E,wCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,qK,mkBAaXJ,EAAWK,gBAAiB,EC9B5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,yCACA,4BAAW,0BAAYC,WAAW,KAAvB,QAAX,iCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,+O,mkBAgBXJ,EAAWK,gBAAiB,E,wCC9B5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,oCACA,+EACA,kCACA,2FACA,qJACA,+BACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,4CAIL,kCACA,0BACF,0BACE,YAAC,EAAD,CAAOD,QAAQ,UACf,YAAC,EAAD,CAAWA,QAAQ,eAErB,0BACE,YAAC,EAAD,CAAQA,QAAQ,WAChB,YAAC,EAAD,CAAMA,QAAQ,WAGd,8BAKJH,EAAWK,gBAAiB","file":"25.bundle.4e510af16ecf6cc72a5a.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Basic`}</h3>\n      <p>{`The simplest usage.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<PopConfirm title=\"Are you sure to delete this?\" onConfirm={() => Message.info('You clicked Yes')}>\n  <a href=\"#\" style={{color: '#6E41BF'}}>Delete</a>\n</PopConfirm>\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Placement`}</h3>\n      <p>{`There are 12 placement options available.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const btnStyle = {\n    width: 80,\n  };\n\n  const content = (\n    <div>\n      <div>This is the content</div>\n      <div>This is the content</div>\n    </div>\n  );\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <td></td>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"top-left\">\n              <Button style={btnStyle}>TL</Button>\n            </PopConfirm>\n          </td>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"top-center\">\n              <Button style={btnStyle}>Top</Button>\n            </PopConfirm>\n          </td>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"top-right\">\n              <Button style={btnStyle}>TR</Button>\n            </PopConfirm>\n          </td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"left-top\">\n              <Button style={btnStyle}>LT</Button>\n            </PopConfirm>\n          </td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"right-top\">\n              <Button style={btnStyle}>RT</Button>\n            </PopConfirm>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"left-center\">\n              <Button style={btnStyle}>Left</Button>\n            </PopConfirm>\n          </td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"right-center\">\n              <Button style={btnStyle}>Right</Button>\n            </PopConfirm>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"left-bottom\">\n              <Button style={btnStyle}>LB</Button>\n            </PopConfirm>\n          </td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"right-bottom\">\n              <Button style={btnStyle}>RB</Button>\n            </PopConfirm>\n          </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"bottom-left\">\n              <Button style={btnStyle}>BL</Button>\n            </PopConfirm>\n          </td>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"bottom-center\">\n              <Button style={btnStyle}>Bottom</Button>\n            </PopConfirm>\n          </td>\n          <td>\n            <PopConfirm title=\"Are you sure to delete this?\" content={content} placement=\"bottom-right\">\n              <Button style={btnStyle}>BR</Button>\n            </PopConfirm>\n          </td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Locale text`}</h3>\n      <p>{`Set `}<inlineCode parentName=\"p\">{`confirmText`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`cancelText`}</inlineCode>{` props to customise button's labels.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<PopConfirm title=\"Are you sure to delete this?\" confirmText=\"OK\" cancelText=\"Cancel\">\n  <a href=\"#\" style={{color: '#6E41BF'}}>Delete</a>\n</PopConfirm>\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Customised Icon`}</h3>\n      <p>{`Set `}<inlineCode parentName=\"p\">{`icon`}</inlineCode>{` props to customize the icon.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<PopConfirm \n  title=\"Are you sure to delete this?\"\n  icon={<Icon type=\"question-fill\" color=\"#f00\"/>}\n  onConfirm={() => Message.info('You clicked Yes')}>\n  <a href=\"#\" style={{color: '#6E41BF'}}>Delete</a>\n</PopConfirm>\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Basic from './demo/basic.md'\nimport Placement from './demo/placement.md'\nimport Locale from './demo/locale.md'\nimport Icon from './demo/icon.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`PopConfirm`}</h1>\n    <p>{`A simple and compact confirmation dialog of an action.`}</p>\n    <h2>{`Scenario`}</h2>\n    <p>{`A simple and compact dialog used for asking for user confirmation.`}</p>\n    <p>{`The difference with the confirm modal dialog is that it's more lightweight than the static popped full-screen confirm modal.`}</p>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { PopConfirm } from 'tiny-ui';\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n    <Placement mdxType=\"Placement\" />\n  </column>\n  <column>\n    <Locale mdxType=\"Locale\" />\n    <Icon mdxType=\"Icon\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}