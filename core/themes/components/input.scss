@import "../var";
@import "../mixins/input";

.#{$prefix}input {
  @include input-default();
  z-index: 1;

  &_disabled {
    @include input-default-disabled();
  }

  &_block {
    width: 100%;
    display: block;
  }

  &-group {
    box-sizing: border-box;

    .#{$prefix}input {
      &:first-child {
        border-top-right-radius: 0;
        border-bottom-right-radius: 0;
      }

      &:last-child {
        border-top-left-radius: 0;
        border-bottom-left-radius: 0;
      }

      &:not(:first-child):not(:last-child) {
        border-radius: 0;
      }
    }
  }

  &-group-btn, &-group-addon {
    &:first-child {
      border-right: 0;
      border-bottom-right-radius: 0;
      border-top-right-radius: 0;
    }

    &:last-child {
      border-left: 0;
      border-bottom-left-radius: 0;
      border-top-left-radius: 0;
    }

    &:not(:first-child):not(:last-child) {
      border-radius: 0;
      border-left: 0;
      border-right: 0;
    }
  }

  &-group-addon {
    @include input-default(false);
    background-color: #fafafa;

    &_disabled {
      @include input-default-disabled();
    }
  }

  &-group-btn {
    @include input-default(false);
    z-index: 1;
    cursor: pointer;
    background-color: $primary-color;
    border-color: $primary-color;
    color: #fff;
    user-select: none;
    left: -1px; //cover input right border

    &:hover {
      border-color: transparent;
      background-color: rgba($primary-color, .8);
    }

    &:active {
      background-color: darken($primary-color, 2.5%);
    }

    &_disabled {
      border-color: transparent;
      cursor: not-allowed;
      background-color: rgba($primary-color, .3);

      &:hover {
        background-color: rgba($primary-color, .3);
      }

      &:active {
        background-color: rgba($primary-color, .3);
      }
    }
  }
}
