{"version":3,"sources":["webpack:///./components/collapse/demo/accordion.md","webpack:///./components/collapse/demo/basic.md","webpack:///./components/collapse/demo/borderless.md","webpack:///./components/collapse/demo/deletable.md","webpack:///./components/collapse/demo/nested.md","webpack:///./components/collapse/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"srBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,mCACA,kEACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,qnB,mkBAiCXJ,EAAWK,gBAAiB,EClD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,wCACA,iIACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,ysB,mkBAqCXJ,EAAWK,gBAAiB,ECtD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,oCACA,wDACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,4mB,mkBAiCXJ,EAAWK,gBAAiB,EClD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,mCACA,qBAAG,0BAAYC,WAAW,KAAvB,SAAH,qBACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,+nB,mkBAiCXJ,EAAWK,gBAAiB,EClD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,sCACA,qBAAG,0BAAYC,WAAW,KAAvB,YAAH,yBAAiF,0BAAYA,WAAW,KAAvB,YAAjF,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,kwB,mkBAqCXJ,EAAWK,gBAAiB,E,wCClD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,kCACA,4EACA,kCACA,6FACA,qBAAG,0BAAYC,WAAW,KAAvB,aAAH,yBAAkF,0BAAYA,WAAW,KAAvB,YAAlF,2DACA,+BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,yEAML,kCACA,0BACF,0BACE,YAAC,EAAD,CAAOD,QAAQ,UACf,YAAC,EAAD,CAAWA,QAAQ,cACnB,YAAC,EAAD,CAAQA,QAAQ,YAElB,0BACE,YAAC,EAAD,CAAYA,QAAQ,eACpB,YAAC,EAAD,CAAWA,QAAQ,gBAGnB,8BAKJH,EAAWK,gBAAiB","file":"10.bundle.9279b018f2de115933bb.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Accordion`}</h3>\n      <p>{`Only one panel can be expanded at a time.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Panel } = Collapse;\n  \n  const text = \\`\n    A dog is a type of domesticated animal.\n    Known for its loyalty and faithfulness,\n    it can be found as a welcome guest in many households across the world.\n  \\`;\n  \n  return (\n    <Collapse accordion defaultActiveKey={'1'}>\n      <Panel header=\"This is panel header 1\" itemKey=\"1\">\n        <p>{text}</p>\n      </Panel>\n      <Panel header=\"This is panel header 2\" itemKey=\"2\">\n        <p>{text}</p>\n      </Panel>\n      <Panel header=\"This is panel header 3\" itemKey=\"3\">\n        <p>{text}</p>\n      </Panel>\n    </Collapse>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Basic Collapse`}</h3>\n      <p>{`By default, any number of panels can be expanded at a time. The first panel is expanded in this example.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Panel } = Collapse;\n  \n  const callback = (key) => {\n    console.log(key);\n  }\n  \n  const text = \\`\n    A dog is a type of domesticated animal.\n    Known for its loyalty and faithfulness,\n    it can be found as a welcome guest in many households across the world.\n  \\`;\n  \n  return (\n    <Collapse defaultActiveKey={['1']} onChange={callback}>\n      <Panel header=\"This is panel header 1\" itemKey=\"1\">\n        <p>{text}</p>\n      </Panel>\n      <Panel header=\"This is panel header 2\" itemKey=\"2\">\n        <p>{text}</p>\n      </Panel>\n      <Panel header=\"This is panel header 3\" itemKey=\"3\" disabled>\n        <p>{text}</p>\n      </Panel>\n    </Collapse>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Borderless`}</h3>\n      <p>{`A borderless style of Collapse.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Panel } = Collapse;\n  \n  const text = \\`\n    A dog is a type of domesticated animal.\n    Known for its loyalty and faithfulness,\n    it can be found as a welcome guest in many households across the world.\n  \\`;\n  \n  return (\n    <Collapse bordered={false}>\n      <Panel header=\"This is panel header 1\" itemKey=\"1\">\n        <p>{text}</p>\n      </Panel>\n      <Panel header=\"This is panel header 2\" itemKey=\"2\">\n        <p>{text}</p>\n      </Panel>\n      <Panel header=\"This is panel header 3\" itemKey=\"3\" disabled>\n        <p>{text}</p>\n      </Panel>\n    </Collapse>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Deletable`}</h3>\n      <p><inlineCode parentName=\"p\">{`Panel`}</inlineCode>{` can be deleted. `}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Panel } = Collapse;\n  \n  const text = \\`\n    A dog is a type of domesticated animal.\n    Known for its loyalty and faithfulness,\n    it can be found as a welcome guest in many households across the world.\n  \\`;\n  \n  return (\n    <Collapse deletable defaultActiveKey={['1', '2']} >\n      <Panel header=\"This is panel header 1\" itemKey=\"1\">\n        <p>{text}</p>\n      </Panel>\n      <Panel header=\"This is panel header 2\" itemKey=\"2\">\n        <p>{text}</p>\n      </Panel>\n      <Panel header=\"This is panel header 3\" itemKey=\"3\">\n        <p>{text}</p>\n      </Panel>\n    </Collapse>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Nested panel`}</h3>\n      <p><inlineCode parentName=\"p\">{`Collapse`}</inlineCode>{` is nested inside the `}<inlineCode parentName=\"p\">{`Collapse`}</inlineCode>{`.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Panel } = Collapse;\n  \n  const text = \\`\n    A dog is a type of domesticated animal.\n    Known for its loyalty and faithfulness,\n    it can be found as a welcome guest in many households across the world.\n  \\`;\n  \n  return (\n    <Collapse defaultActiveKey={'1'}>\n      <Panel header=\"This is panel header 1\" itemKey=\"1\">\n        <Collapse defaultActiveKey=\"1\">\n          <Panel header=\"This is panel nest panel\" itemKey=\"1\">\n            <p>{text}</p>\n          </Panel>\n        </Collapse>\n      </Panel>\n      <Panel header=\"This is panel header 2\" itemKey=\"2\">\n        <p>{text}</p>\n      </Panel>\n      <Panel header=\"This is panel header 3\" itemKey=\"3\">\n        <p>{text}</p>\n      </Panel>\n    </Collapse>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Accordion from './demo/accordion.md'\nimport Basic from './demo/basic.md'\nimport Borderless from './demo/borderless.md'\nimport Deletable from './demo/deletable.md'\nimport Nested from './demo/nested.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Collapse`}</h1>\n    <p>{`A content area which can be collapsed and expanded.`}</p>\n    <h2>{`Scenario`}</h2>\n    <p>{`Can be used to group or hide complex regions to keep the page clean.`}</p>\n    <p><inlineCode parentName=\"p\">{`Accordion`}</inlineCode>{` is a special kind of `}<inlineCode parentName=\"p\">{`Collapse`}</inlineCode>{`, which allows only one panel to be expanded at a time.`}</p>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Collapse } from 'tiny-ui';\n\nconst { Panel } = Collapse;\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n    <Accordion mdxType=\"Accordion\" />\n    <Nested mdxType=\"Nested\" />\n  </column>\n  <column>\n    <Borderless mdxType=\"Borderless\" />\n    <Deletable mdxType=\"Deletable\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}