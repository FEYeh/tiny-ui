{"version":3,"sources":["webpack:///./components/switch/demo/basic.md","webpack:///./components/switch/demo/disabled.md","webpack:///./components/switch/demo/loading.md","webpack:///./components/switch/demo/size.md","webpack:///./components/switch/demo/text.md","webpack:///./components/switch/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"srBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,+BACA,8CACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,mB,mkBAWXJ,EAAWK,gBAAiB,EC5B5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,kCACA,kDACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,yX,mkBA6BXJ,EAAWK,gBAAiB,EC9C5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,iCACA,wDACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,oT,mkBA+BXJ,EAAWK,gBAAiB,EChD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,yCACA,qBAAG,0BAAYC,WAAW,KAAvB,QAAH,mDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,wY,mkBAmCXJ,EAAWK,gBAAiB,ECpD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,kDACA,yDACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,4U,mkBA+BXJ,EAAWK,gBAAiB,E,wCC5C5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,gCACA,kFACA,qCACA,sBACE,kBAAIC,WAAW,MAAf,8EACA,kBAAIA,WAAW,MAAf,mOAEF,+BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,wCAIL,kCACA,0BACF,0BACE,YAAC,EAAD,CAAOD,QAAQ,UACf,YAAC,EAAD,CAAMA,QAAQ,SACd,YAAC,EAAD,CAAMA,QAAQ,UAEhB,0BACE,YAAC,EAAD,CAASA,QAAQ,YACjB,YAAC,EAAD,CAAUA,QAAQ,eAGlB,8BAKJH,EAAWK,gBAAiB","file":"25.bundle.9279b018f2de115933bb.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Basic`}</h3>\n      <p>{`The most basic usage.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<Switch />\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Disabled`}</h3>\n      <p>{`Disabled state of Switch.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const Wrapper = () => {\n    const [disabled, setDisabled] = React.useState(true);\n    \n    return (\n      <>\n        <Switch disabled={disabled} />\n        <br/><br/>\n        <Button color=\"primary\" onClick={() => setDisabled(!disabled)}>\n          Toggle Disabled\n        </Button>\n      </>\n    );\n  }\n  \n  return (\n    <Wrapper />\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Loading`}</h3>\n      <p>{`Mark a pending state of switch.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const Wrapper = () => {\n    return (\n      <div>\n        <Switch\n          loading\n          checked={true}\n        />\n        <br/><br/>\n        <Switch\n          loading\n          checked={false}\n        />\n      </div>\n    );\n  }\n  \n  return (\n    <Wrapper />\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Different sizes`}</h3>\n      <p><inlineCode parentName=\"p\">{`size`}</inlineCode>{` attribute represents different sized switches.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const Wrapper = () => {\n    return (\n      <div>\n        <Switch\n          size=\"sm\"\n          checkedText=\"sm\"\n        />\n        <br/><br/>\n        <Switch\n          checkedText=\"md\"\n        />\n        <br/><br/>\n        <Switch\n          size=\"lg\"\n          checkedText=\"lg\"\n        />\n      </div>\n    );\n  }\n  \n  return (\n    <Wrapper />\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Text & customise element`}</h3>\n      <p>{`With text and customise element.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const Wrapper = () => {\n    return (\n      <div>\n        <Switch\n          checkedText=\"On\"\n          uncheckedText=\"Off\"\n        />\n        <br/><br/>\n        <Switch\n          checkedText=\"开\"\n          uncheckedText=\"关\"\n        />\n      </div>\n    );\n  }\n  \n  return (\n    <Wrapper />\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Basic from './demo/basic.md'\nimport Disabled from './demo/disabled.md'\nimport Loading from './demo/loading.md'\nimport Size from './demo/size.md'\nimport Text from './demo/text.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Switch`}</h1>\n    <p>{`Switch is used for switching between two opposing states.`}</p>\n    <h2>{`When To Use`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`If you need to represent the switching between two states or on-off state.`}</li>\n      <li parentName=\"ul\">{`The difference between Switch and Checkbox is that Switch will trigger a state change directly when you toggle it, while Checkbox is generally used for state marking, which should work in conjunction with submit operation.`}</li>\n    </ul>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Switch } from 'tiny-ui';\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n    <Text mdxType=\"Text\" />\n    <Size mdxType=\"Size\" />\n  </column>\n  <column>\n    <Loading mdxType=\"Loading\" />\n    <Disabled mdxType=\"Disabled\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}