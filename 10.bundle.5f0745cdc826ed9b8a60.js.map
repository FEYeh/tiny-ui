{"version":3,"sources":["webpack:///./components/checkbox/demo/basic.md","webpack:///./components/checkbox/demo/check-all.md","webpack:///./components/checkbox/demo/disabled.md","webpack:///./components/checkbox/demo/group.md","webpack:///./components/checkbox/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"srBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,+BACA,0CACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,+J,mkBAmBXJ,EAAWK,gBAAiB,ECpC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,mCACA,4BAAW,0BAAYC,WAAW,KAAvB,iBAAX,uCAA4G,sBAAQA,WAAW,KAAnB,aAA5G,YACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,gtC,mkBAoDXJ,EAAWK,gBAAiB,ECrE5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,kCACA,oDACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,wjB,mkBA6BXJ,EAAWK,gBAAiB,EC9C5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,wCACA,wDACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,8R,mkBAqBXJ,EAAWK,gBAAiB,E,wCCnC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,kCACA,oDACA,kCACA,sBACE,kBAAIC,WAAW,MAAf,4DACA,kBAAIA,WAAW,MAAf,kPAEF,+BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,yEAML,kCACA,0BACF,0BACE,YAAC,EAAD,CAAOD,QAAQ,UACf,YAAC,EAAD,CAAOA,QAAQ,WAEjB,0BACE,YAAC,EAAD,CAAUA,QAAQ,aAClB,YAAC,EAAD,CAAUA,QAAQ,eAGlB,8BAKJH,EAAWK,gBAAiB","file":"10.bundle.5f0745cdc826ed9b8a60.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Basic`}</h3>\n      <p>{`The simplest use.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const onChange = (val, e) => {\n    console.log(val);\n  };\n  \n  return (\n    <Checkbox onChange={onChange}>Checkbox</Checkbox>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Check all`}</h3>\n      <p>{`The `}<inlineCode parentName=\"p\">{`indeterminate`}</inlineCode>{` property can help you to achieve a `}<strong parentName=\"p\">{`check all`}</strong>{` effect.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Group } = Checkbox;\n  \n  const Wrapper = () => {\n    const [checkboxVal, setCheckboxVal] = React.useState(['a', 'c']);\n    const [indeterminate, setIndeterminate] = React.useState(true);\n    const [checkAll, setCheckAll] = React.useState(false);\n    \n    return (\n      <>\n        <div style={{ borderBottom: '1px solid rgb(233, 233, 233)', marginBottom: '15px' }}>\n          <Checkbox\n            onChange={val => {\n              val ? setCheckboxVal(['a', 'b', 'c']) : setCheckboxVal([]);\n              setIndeterminate(false);\n              setCheckAll(val);\n            }}\n            checked={checkAll}\n            indeterminate={indeterminate}>\n            Check All\n          </Checkbox>\n        </div>\n      \n        <Group\n          value={checkboxVal} \n          onChange={(val) => {\n            setCheckboxVal(val);\n            setCheckAll(val.length === 3);\n            setIndeterminate(val.length < 3 && val.length > 0);\n          }}>\n            <Checkbox value=\"a\">A</Checkbox>\n            <Checkbox value=\"b\">B</Checkbox>\n            <Checkbox value=\"c\">C</Checkbox>\n        </Group>\n      </>\n    );\n  };\n  \n  return (\n    <Wrapper />\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Disabled`}</h3>\n      <p>{`Disabled state of Checkbox.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Group } = Checkbox;\n  \n  return (\n    <>\n      <Group defaultValue={['a', 'b']} onChange={(val) => console.log(val)}>\n        <Checkbox value=\"a\">A</Checkbox>\n        <Checkbox value=\"b\" disabled>B</Checkbox>\n        <Checkbox value=\"c\">C</Checkbox>\n      </Group>\n      <br/>\n      <Group disabled defaultValue={['a', 'c']} onChange={(val) => console.log(val)}>\n        <Checkbox value=\"a\">A</Checkbox>\n        <Checkbox value=\"b\">B</Checkbox>\n        <Checkbox value=\"c\">C</Checkbox>\n      </Group>\n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Checkbox Group`}</h3>\n      <p>{`A group of checkbox components.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Group } = Checkbox;\n  \n  return (\n    <Group defaultValue={['a', 'b']} onChange={(val) => console.log(val)}>\n      <Checkbox value=\"a\">A</Checkbox>\n      <Checkbox value=\"b\">B</Checkbox>\n      <Checkbox value=\"c\">C</Checkbox>\n    </Group>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Basic from './demo/basic.md'\nimport CheckAll from './demo/check-all.md'\nimport Disabled from './demo/disabled.md'\nimport Group from './demo/group.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Checkbox`}</h1>\n    <p>{`A multiple entry component.`}</p>\n    <h2>{`Scenario`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`Used for selecting multiple values from several options.`}</li>\n      <li parentName=\"ul\">{`If you use only one checkbox, it is the same as using Switch to toggle between two states. The difference is that Switch will trigger the state change directly, but Checkbox just marks the state as changed and this needs to be submitted.`}</li>\n    </ul>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Checkbox } from 'tiny-ui';\n\nconst { Group } = Checkbox;\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n    <Group mdxType=\"Group\" />\n  </column>\n  <column>\n    <CheckAll mdxType=\"CheckAll\" />\n    <Disabled mdxType=\"Disabled\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}