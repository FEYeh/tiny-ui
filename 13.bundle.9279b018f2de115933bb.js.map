{"version":3,"sources":["webpack:///./components/flip/demo/basic.md","webpack:///./components/flip/demo/direction.md","webpack:///./components/flip/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"srBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,+BACA,qCACA,8BACE,iBAAGC,WAAW,cAAa,sBAAQA,WAAW,KAAnB,6CAE7B,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,oa,mkBA8BXJ,EAAWK,gBAAiB,EClD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,mCACA,qBAAG,0BAAYC,WAAW,KAAvB,aAAH,QAAiE,0BAAYA,WAAW,KAAvB,WAAjE,iCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,0oD,mkBAoEXJ,EAAWK,gBAAiB,E,wCCpF5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,8BACA,uEACA,kCACA,2LACA,+BACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,gEAML,kCACA,0BACF,0BACE,YAAC,EAAD,CAAOD,QAAQ,WAEjB,0BACE,YAAC,EAAD,CAAWA,QAAQ,gBAGnB,6BACA,yBACE,qBAAOC,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,YAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,eAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,QAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAKJ,qBAAOA,WAAW,SAChB,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,yBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SAGb,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,UAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,0BAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,oBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,SAGb,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,kBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,SAEa,0BAAYA,WAAW,MAAvB,cAFb,IAEyE,0BAAYA,WAAW,MAAvB,aACzE,oBAAIA,WAAW,MAAS,CACtB,MAAS,OACR,0BAAYA,WAAW,MAAvB,gBAEL,kBAAIA,WAAW,SACb,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,qBAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,WAGA,oBAAIA,WAAW,MAAS,CACtB,MAAS,OADX,aAUVJ,EAAWK,gBAAiB","file":"13.bundle.9279b018f2de115933bb.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Basic`}</h3>\n      <p>{`A basic flip`}</p>\n      <blockquote>\n        <p parentName=\"blockquote\"><strong parentName=\"p\">{`The flip's width and height must be set`}</strong></p>\n      </blockquote>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Item } = Flip;\n  \n  const itemStyle = {\n    color: '#fff',\n    lineHeight: '200px',\n    fontSize: '18px',\n  };\n  \n  return (\n    <Flip height={200} width={320}>\n      <Item style={{ ...itemStyle, backgroundColor: '#00bcd4' }}>\n        I'm front\n      </Item>\n      <Item style={{ ...itemStyle, backgroundColor: '#ff9800' }}>\n        I'm back\n      </Item>\n    </Flip>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Direction`}</h3>\n      <p><inlineCode parentName=\"p\">{`direction`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`reverse`}</inlineCode>{` can make the flip different.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Item } = Flip;\n  \n  const WIDTH = '240px';\n  const HEIGHT = '150px';\n  \n  const itemStyle = {\n    color: '#fff',\n    lineHeight: HEIGHT,\n    fontSize: '18px',\n  };\n  \n  return (\n    <>\n      <p>Horizontal flip</p>\n      <Flip height={HEIGHT} width={WIDTH}>\n        <Item style={{ ...itemStyle, backgroundColor: '#00bcd4' }}>\n          Flip from right to left\n        </Item>\n        <Item style={{ ...itemStyle, backgroundColor: '#ff9800' }}>\n          I'm back\n        </Item>\n      </Flip>\n      \n      <span style={{ width: 20, display: 'inline-block' }}/>\n      \n      <Flip reverse height={HEIGHT} width={WIDTH}>\n        <Item style={{ ...itemStyle, backgroundColor: '#00bcd4' }}>\n          Flip from left to right\n        </Item>\n        <Item style={{ ...itemStyle, backgroundColor: '#ff9800' }}>\n          I'm back\n        </Item>\n      </Flip>\n      \n      <p>Vertical flip</p>\n      <Flip direction=\"vertical\" height={HEIGHT} width={WIDTH}>\n        <Item style={{ ...itemStyle, backgroundColor: '#00bcd4' }}>\n          Flip from top to bottom\n        </Item>\n        <Item style={{ ...itemStyle, backgroundColor: '#ff9800' }}>\n          I'm back\n        </Item>\n      </Flip>\n      \n      <span style={{ width: 20, display: 'inline-block' }}/>\n      \n      <Flip direction=\"vertical\" reverse height={HEIGHT} width={WIDTH}>\n        <Item style={{ ...itemStyle, backgroundColor: '#00bcd4' }}>\n          Flip from bottom to top\n        </Item>\n        <Item style={{ ...itemStyle, backgroundColor: '#ff9800' }}>\n          I'm back\n        </Item>\n      </Flip>    \n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Basic from './demo/basic.md'\nimport Direction from './demo/direction.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Flip`}</h1>\n    <p>{`A flip box which can display two side content.`}</p>\n    <h2>{`Scenario`}</h2>\n    <p>{`If one thing with extra content which is not important, you can display the main the content on the front side and satellite information showing on the back side.`}</p>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Flip } from 'tiny-ui';\n\nconst { Item } = Flip;\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n  </column>\n  <column>\n    <Direction mdxType=\"Direction\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    <table>\n      <thead parentName=\"table\">\n        <tr parentName=\"thead\">\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Property`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Description`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Type`}</th>\n          <th parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`Default`}</th>\n        </tr>\n      </thead>\n      <tbody parentName=\"table\">\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the container's width`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number or string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`the container's height`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`number or string`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`direction`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`flip direction`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`enum: `}<inlineCode parentName=\"td\">{`horizontal`}</inlineCode>{` `}<inlineCode parentName=\"td\">{`vertical`}</inlineCode></td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}><inlineCode parentName=\"td\">{`horizontal`}</inlineCode></td>\n        </tr>\n        <tr parentName=\"tbody\">\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`reverse`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`reverse direction`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`boolean`}</td>\n          <td parentName=\"tr\" {...{\n            \"align\": null\n          }}>{`false`}</td>\n        </tr>\n      </tbody>\n    </table>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}