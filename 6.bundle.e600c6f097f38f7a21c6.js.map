{"version":3,"sources":["webpack:///./components/badge/demo/basic.md","webpack:///./components/badge/demo/custom.md","webpack:///./components/badge/demo/dot.md","webpack:///./components/badge/demo/overflow.md","webpack:///./components/badge/demo/standalone.md","webpack:///./components/badge/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qrBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,+BACA,yCACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,knB,mkBAsCXJ,EAAWK,gBAAiB,ECvD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,wCACA,4BAAW,0BAAYC,WAAW,KAAvB,SAAX,oDAAiH,0BAAYA,WAAW,KAAvB,cAAjH,gCACA,8BACE,iBAAGA,WAAW,cAAd,8BAA0D,0BAAYA,WAAW,KAAvB,cAA1D,aAEF,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,0S,mkBAiBXJ,EAAWK,gBAAiB,ECrC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,mCACA,uEACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,gX,mkBA6BXJ,EAAWK,gBAAiB,EC9C5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,kCACA,qBAAG,0BAAYC,WAAW,KAAvB,OAAH,mFAAsI,sBAAQA,WAAW,KAAnB,MAAtI,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,irB,mkBAyCXJ,EAAWK,gBAAiB,EC1D5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,oCACA,mEACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,oW,mkBAuBXJ,EAAWK,gBAAiB,E,wCCpC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,+BACA,oFACA,kCACA,mKACA,+BACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,iBADZ,uCAIL,kCACA,0BACF,0BACE,YAAC,EAAD,CAAOD,QAAQ,UACf,YAAC,EAAD,CAAUA,QAAQ,aAClB,YAAC,EAAD,CAAYA,QAAQ,gBAEtB,0BACE,YAAC,EAAD,CAAKA,QAAQ,QACb,YAAC,EAAD,CAAQA,QAAQ,aAGhB,8BAKJH,EAAWK,gBAAiB","file":"6.bundle.e600c6f097f38f7a21c6.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Basic`}</h3>\n      <p>{`Simplest Usage. `}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const spanStyle = {\n    width: '42px',\n    height: '42px',\n    borderRadius: '4px',\n    background: '#eee',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n  };\n  \n  const badgeStyle = {\n    marginRight: '20px'\n  };\n  \n  return (\n    <>\n      <Badge count={5} style={badgeStyle}>\n        <span style={spanStyle} />\n      </Badge>\n      <Badge count={0} showZero style={badgeStyle}>\n        <span style={spanStyle} />\n      </Badge>\n      <Badge count={<Icon type=\"lock\" style={{ color: '#f5222d' }} />}>\n        <span style={spanStyle} />\n      </Badge>\n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Colorful badge`}</h3>\n      <p>{`Set `}<inlineCode parentName=\"p\">{`color`}</inlineCode>{` to display the dot badge with different colors. `}<inlineCode parentName=\"p\">{`processing`}</inlineCode>{` can show an wave animation.`}</p>\n      <blockquote>\n        <p parentName=\"blockquote\">{`Only the dot badge has the `}<inlineCode parentName=\"p\">{`processing`}</inlineCode>{` effect.`}</p>\n      </blockquote>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<>\n  <div><Badge dot /> Error</div>\n  <div><Badge dot processing color=\"#1890ff\"/> Processing</div>\n  <div><Badge dot color=\"#52c41a\" /> Successful</div>\n  <div><Badge dot color=\"#faad14\"/> Warning</div>\n  <div><Badge dot processing color=\"#faad14\"/> Warning with animation</div>\n</>\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Red badge`}</h3>\n      <p>{`Display a red badge without a specific count. `}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const badgeStyle = {\n    marginRight: '20px'\n  };\n  \n  return (\n    <>\n      <Badge dot style={badgeStyle}>\n        <Icon type=\"broadcast\" />\n      </Badge>\n      <Badge dot={false} style={badgeStyle}>\n        <Icon type=\"broadcast\" />\n      </Badge>\n      <Badge dot>\n        <span>Something</span>\n      </Badge>\n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Overflow`}</h3>\n      <p><inlineCode parentName=\"p\">{`max`}</inlineCode>{` is displayed when count is larger than max count. The default maximum value is `}<strong parentName=\"p\">{`99`}</strong>{`.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const spanStyle = {\n    width: '42px',\n    height: '42px',\n    borderRadius: '4px',\n    background: '#eee',\n    display: 'inline-block',\n    verticalAlign: 'middle',\n  };\n  \n  const badgeStyle = {\n    marginRight: '20px'\n  };\n  \n  return (\n    <>\n      <Badge count={99} style={badgeStyle}>\n        <span style={spanStyle} />\n      </Badge>\n      <Badge count={100} style={badgeStyle}>\n        <span style={spanStyle} />\n      </Badge>\n      <Badge count={99} max={10} style={badgeStyle}>\n        <span style={spanStyle} />\n      </Badge>\n      <Badge count={1000} max={999}>\n        <span style={spanStyle} />\n      </Badge>\n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Standalone`}</h3>\n      <p>{`Used in standalone when children is empty.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const badgeStyle = {\n    marginRight: '15px'\n  };\n  \n  return (\n    <>\n      <Badge count={20} style={badgeStyle} />\n      <Badge count={10} style={badgeStyle} color=\"#fff\" badgeStyle={{ color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }} />\n      <Badge count={100} style={badgeStyle} color=\"#52c41a\"/>\n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Basic from './demo/basic.md'\nimport Custom from './demo/custom.md'\nimport Dot from './demo/dot.md'\nimport Overflow from './demo/overflow.md'\nimport Standalone from './demo/standalone.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Badge`}</h1>\n    <p>{`Small numerical value or status descriptor for UI elements.`}</p>\n    <h2>{`Scenario`}</h2>\n    <p>{`Badge normally appears in proximity to notifications or user avatars with eye-catching appeal, typically displaying unread messages count.`}</p>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Badge } from 'tiny-ui';\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n    <Overflow mdxType=\"Overflow\" />\n    <Standalone mdxType=\"Standalone\" />\n  </column>\n  <column>\n    <Dot mdxType=\"Dot\" />\n    <Custom mdxType=\"Custom\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}