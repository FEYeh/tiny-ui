{"version":3,"sources":["webpack:///./components/message/demo/basic.md","webpack:///./components/message/demo/duration.md","webpack:///./components/message/demo/extra.md","webpack:///./components/message/demo/type.md","webpack:///./components/message/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"srBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,uCACA,wDACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,oM,mkBAmBXJ,EAAWK,gBAAiB,ECpC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,4CACA,wEAAuD,0BAAYC,WAAW,KAAvB,MAAvD,OAA6G,0BAAYA,WAAW,KAAvB,OAA7G,KACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,gP,mkBAmBXJ,EAAWK,gBAAiB,ECpC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,sCACA,mEACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,oY,mkBA2BXJ,EAAWK,gBAAiB,EC5C5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,oDACA,oCAAmB,0BAAYC,WAAW,KAAvB,QAAnB,KAAyE,0BAAYA,WAAW,KAAvB,WAAzE,KAAkI,0BAAYA,WAAW,KAAvB,WAAlI,KAA2L,0BAAYA,WAAW,KAAvB,SAA3L,QAAqP,0BAAYA,WAAW,KAAvB,WAArP,WACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,giB,mkBAyBXJ,EAAWK,gBAAiB,E,wCCvC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iCACA,4FACA,kCACA,sBACE,kBAAIC,WAAW,MACb,iBAAGA,WAAW,MAAd,6DAEF,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,gIAGJ,+BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,yCAIL,kCACA,0BACF,0BACE,YAAC,EAAD,CAAOD,QAAQ,UACf,YAAC,EAAD,CAAUA,QAAQ,cAEpB,0BACE,YAAC,EAAD,CAAMA,QAAQ,SACd,YAAC,EAAD,CAAOA,QAAQ,YAGf,8BAKJH,EAAWK,gBAAiB","file":"20.bundle.e600c6f097f38f7a21c6.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Normal prompt`}</h3>\n      <p>{`Normal message for information.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const onClick = () => {\n    Message('Normal message for information.');\n  };\n  \n  return (\n    <Button color=\"primary\" onClick={onClick}>Normal message</Button>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Customize duration`}</h3>\n      <p>{`Customize message display duration from default `}<inlineCode parentName=\"p\">{`3s`}</inlineCode>{` to `}<inlineCode parentName=\"p\">{`10s`}</inlineCode>{`.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const onClick = () => {\n    Message('This is a prompt message for success, and it will disappear in 10 seconds', 10000);\n  };\n  \n  return (\n    <Button onClick={onClick}>Customized display duration</Button>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Extra action`}</h3>\n      <p>{`Add an extra content to allow more action.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const onClick = () => {\n    Message.loading('Deleting...', 3000, null, {\n      extra: (\n        <span \n          style={{color: '#1890ff', cursor: 'pointer'}}\n          onClick={() => Message.success('Undo successful')}>\n          Undo\n        </span>\n      )\n    });\n  };\n  \n  return (\n    <Button color=\"red\" onClick={onClick}>Delete</Button>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Different types of message`}</h3>\n      <p>{`Messages of `}<inlineCode parentName=\"p\">{`info`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`success`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`warning`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`error`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`loading`}</inlineCode>{` types.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const onClick = (type) => {\n    Message[type](\\`A \\${type} type message.\\`);\n  };\n  \n  return (\n    <>\n      <Button color=\"blue\" onClick={() => onClick('info')}>Info</Button>\n      <Button color=\"green\" onClick={() => onClick('success')}>Success</Button>\n      <Button color=\"yellow\" onClick={() => onClick('warning')}>Warning</Button>\n      <Button color=\"red\" onClick={() => onClick('error')}>Error</Button>\n      <Button color=\"blue\" onClick={() => onClick('loading')}>Loading</Button>\n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Basic from './demo/basic.md'\nimport Duration from './demo/duration.md'\nimport Extra from './demo/extra.md'\nimport Type from './demo/type.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Message`}</h1>\n    <p>{`Display global messages as feedback in response to user operations.`}</p>\n    <h2>{`Scenario`}</h2>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`To provide feedback such as success, warning, error etc.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`A message is displayed at top and center and will be dismissed automatically, as a non-interrupting light-weighted prompt.`}</p>\n      </li>\n    </ul>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Message } from 'tiny-ui';\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n    <Duration mdxType=\"Duration\" />\n  </column>\n  <column>\n    <Type mdxType=\"Type\" />\n    <Extra mdxType=\"Extra\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}