{"version":3,"sources":["webpack:///./components/avatar/demo/auto-font.md","webpack:///./components/avatar/demo/basic.md","webpack:///./components/avatar/demo/group.md","webpack:///./components/avatar/demo/presence.md","webpack:///./components/avatar/demo/type.md","webpack:///./components/avatar/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"qrBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,4CACA,4KACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,4uB,mkBAkCXJ,EAAWK,gBAAiB,ECnD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,+BACA,mDAAkC,0BAAYC,WAAW,KAAvB,QAAlC,kCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,2oB,mkBAiCXJ,EAAWK,gBAAiB,EClD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,+BACA,gEAA+C,0BAAYC,WAAW,KAAvB,eAA/C,eACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,kT,mkBAsBXJ,EAAWK,gBAAiB,ECvC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,4CACA,qEAAoD,0BAAYC,WAAW,KAAvB,UAApD,KAA4G,0BAAYA,WAAW,KAAvB,QAA5G,KAAkK,0BAAYA,WAAW,KAAvB,QAAlK,OAA0N,0BAAYA,WAAW,KAAvB,WAA1N,2CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,yX,mkBAwBXJ,EAAWK,gBAAiB,ECzC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,8BACA,4IACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,wd,mkBA0BXJ,EAAWK,gBAAiB,E,wCCvC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,gCACA,wFAAuE,0BAAYC,WAAW,KAAvB,SAAvE,KAA8H,0BAAYA,WAAW,KAAvB,QAA9H,QAAuL,0BAAYA,WAAW,KAAvB,UAAvL,KACA,kCACA,uDACA,+BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,qEAML,kCACA,0BACF,0BACE,YAAC,EAAD,CAAOD,QAAQ,UACf,YAAC,EAAD,CAAMA,QAAQ,SACd,YAAC,EAAD,CAAOA,QAAQ,WAEjB,0BACE,YAAC,EAAD,CAAUA,QAAQ,aAClB,YAAC,EAAD,CAAUA,QAAQ,eAGlB,8BAKJH,EAAWK,gBAAiB","file":"6.bundle.4e3a65636d6f02fd7d39.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Auto set font size`}</h3>\n      <p>{`For letter type Avatar, when the letters are too long to display, the font size can be automatically adjusted according to the width of the Avatar.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const UserList = ['A', 'Tom', 'Jack', 'Stuart', 'UUUUUUUU'];\n  const colorList = ['#7265e6', '#f56a00', '#ffbf00', '#00a2ae', '#f56a00'];\n\n  const [user, setUser] = React.useState(UserList[0]);\n  const [color, setColor] = React.useState(colorList[0]);\n\n  const changeUser = () => {\n    const idx = UserList.indexOf(user);\n    setUser(idx < UserList.length - 1 ? UserList[idx + 1] : UserList[0]);\n    setColor(idx < colorList.length - 1 ? colorList[idx + 1] : colorList[0]);\n  };\n\n  return (\n    <div>\n      <Avatar size={50} style={{ backgroundColor: color, marginRight: 15 }}>\n        {user}\n      </Avatar>\n      <Button size=\"sm\" onClick={changeUser}>\n        Change\n      </Button>\n    </div>\n  );\n};\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Basic`}</h3>\n      <p>{`Different sizes setting by `}<inlineCode parentName=\"p\">{`size`}</inlineCode>{` and two shapes are available.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const style = {\n    marginRight: 10\n  };\n  \n  return (\n    <>\n      <div>\n        <Avatar icon=\"user\" size={70} style={style}/>\n        <Avatar icon=\"user\" size={50} style={style}/>\n        <Avatar icon=\"user\" style={style}/>\n        <Avatar icon=\"user\" size={24} style={style}/>\n      </div>\n      <br/>\n      <div>\n        <Avatar shape=\"square\" icon=\"user\" size={70} style={style}/>\n        <Avatar shape=\"square\" icon=\"user\" size={50} style={style}/>\n        <Avatar shape=\"square\" icon=\"user\" style={style}/>\n        <Avatar shape=\"square\" icon=\"user\" size={24} style={style}/>\n      </div>\n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Group`}</h3>\n      <p>{`Include multiple avatar items inside an `}<inlineCode parentName=\"p\">{`AvatarGroup`}</inlineCode>{` container.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const { Group } = Avatar;\n\n  return (\n    <Group>\n      <Avatar size={42} src=\"/avatar/avatar2.png\"/>\n      <Avatar size={42} src=\"/avatar/avatar3.png\"/>\n      <Avatar size={42} src=\"/avatar/avatar4.png\"/>\n      <Avatar size={42} src=\"/avatar/avatar5.png\"/>\n    </Group>\n  )\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Presence Indicator`}</h3>\n      <p>{`Avatar also support presence indicators. Add `}<inlineCode parentName=\"p\">{`online`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`busy`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`away`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`offline`}</inlineCode>{` attribute for different status colors.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const style = {\n    marginRight: 10\n  };\n  \n  return (\n    <>\n      <Avatar size={70} presence=\"online\" style={style}>JT</Avatar>\n      <Avatar size={50} presence=\"busy\" style={style}>JT</Avatar>\n      <Avatar size={40} presence=\"away\" style={style}>JT</Avatar>\n      <Avatar size={30} presence=\"offline\" style={style}>JT</Avatar>\n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Type`}</h3>\n      <p>{`Image, Icon and letter are supported, and the latter two kinds avatar can have custom colors and background colors.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const style = {\n    marginRight: 10\n  };\n  \n  return (\n    <>\n      <Avatar icon=\"user\" style={style}/>\n      <Avatar style={style}>U</Avatar>\n      <Avatar style={style}>USER</Avatar>\n      <Avatar src=\"/avatar/avatar1.png\" style={{ ...style }}/>\n      <Avatar style={{ ...style, color: '#f56a00', backgroundColor: '#fde3cf' }}>U</Avatar>\n      <Avatar style={{ ...style, backgroundColor: '#87d068' }} icon=\"user\" />\n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport AutoFont from './demo/auto-font.md'\nimport Basic from './demo/basic.md'\nimport Group from './demo/group.md'\nimport Presence from './demo/presence.md'\nimport Type from './demo/type.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Avatar`}</h1>\n    <p>{`Avatars can be used to represent people or objects. It supports `}<inlineCode parentName=\"p\">{`image`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`Icon`}</inlineCode>{`, or `}<inlineCode parentName=\"p\">{`letter`}</inlineCode>{`.`}</p>\n    <h2>{`Scenario`}</h2>\n    <p>{`Display user's profile picture`}</p>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Avatar } from 'tiny-ui';\n\nconst { Group } = Avatar;\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n    <Type mdxType=\"Type\" />\n    <Group mdxType=\"Group\" />\n  </column>\n  <column>\n    <Presence mdxType=\"Presence\" />\n    <AutoFont mdxType=\"AutoFont\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}