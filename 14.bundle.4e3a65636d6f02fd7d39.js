(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{690:function(e,t,n){"use strict";n.r(t);n(0);var r=n(57);function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o={},i="wrapper";function b(e){var t=e.components,n=l(e,["components"]);return Object(r.b)(i,a({},o,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("demo",null,Object(r.b)("h3",null,"Basic"),Object(r.b)("p",null,"Basic drawer."),Object(r.b)("pre",null,Object(r.b)("code",a({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'() => {\n  const [visible, setVisible] = React.useState(false);\n\n  return (\n    <div>\n      <Button color="primary" onClick={() => setVisible(true)}>\n        Open\n      </Button>\n      <Drawer\n        header="Basic Drawer"\n        placement="right"\n        onClose={() => setVisible(false)}\n        visible={visible}>\n          <div>Some contents...</div>\n          <div>Some contents...</div>\n          <div>Some contents...</div>\n      </Drawer>\n    </div>\n  );\n};\n'))))}function c(){return(c=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}b.isMDXComponent=!0;var p={},u="wrapper";function m(e){var t=e.components,n=s(e,["components"]);return Object(r.b)(u,c({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("demo",null,Object(r.b)("h3",null,"Placement"),Object(r.b)("p",null,"The Drawer can appear from any edge of the screen."),Object(r.b)("pre",null,Object(r.b)("code",c({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),'() => {\nconst { Group } = Radio;\n  \n  const Wrapper = () => {\n    const [visible, setVisible] = React.useState(false);\n    const [placement, setPlacement] = React.useState(\'left\');\n    \n    return(\n      <>\n        <Group value={placement} onChange={(val) => setPlacement(val)}>\n          <Radio value="top">Top</Radio>\n          <Radio value="bottom">Bottom</Radio>\n          <Radio value="left">Left</Radio>\n          <Radio value="right">Right</Radio>\n        </Group>\n        <br/>\n        <br/>\n\n        <Button color="primary" onClick={() => setVisible(true)}>\n          Open\n        </Button>\n\n        <Drawer\n          header="Basic Drawer"\n          placement={placement}\n          onClose={() => setVisible(false)}\n          visible={visible}>\n            <div>Some contents...</div>\n            <div>Some contents...</div>\n            <div>Some contents...</div>\n        </Drawer>\n      </>\n    );\n  };\n  \n  return (\n    <Wrapper />\n  );\n};\n'))))}function d(){return(d=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function O(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}m.isMDXComponent=!0;var j={},f="wrapper";function g(e){var t=e.components,n=O(e,["components"]);return Object(r.b)(f,d({},j,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("demo",null,Object(r.b)("h3",null,"Multi-level drawer"),Object(r.b)("p",null,"Open a new drawer on top of an existing drawer to handle multi branch tasks."),Object(r.b)("pre",null,Object(r.b)("code",d({parentName:"pre"},{className:"language-jsx",metastring:"live",live:!0}),"() => {\n  const [visible, setVisible] = React.useState(false);\n  const [childVisible, setChildVisible] = React.useState(false);\n\n  return (\n    <>\n      <Button color=\"primary\" onClick={() => setVisible(true)}>\n        Open drawer\n      </Button>\n      <Drawer\n        header=\"Multi-level drawer\"\n        size={520}\n        closable={false}\n        onClose={() => setVisible(false)}\n        visible={visible}>\n        <Button color=\"primary\" onClick={() => setChildVisible(true)}>\n          Two-level drawer\n        </Button>\n        <Drawer\n          header=\"Two-level Drawer\"\n          size={320}\n          closable={false}\n          onClose={() => setChildVisible(false)}\n          visible={childVisible}>\n          This is two-level drawer\n        </Drawer>\n        <div\n          style={{\n            position: 'absolute',\n            bottom: 0,\n            width: '100%',\n            borderTop: '1px solid #e8e8e8',\n            padding: '10px 16px',\n            textAlign: 'right',\n            left: 0,\n            background: '#fff',\n            borderRadius: '0 0 4px 4px',\n          }}>\n          <Button\n            onClick={() => setVisible(false)}>\n            Cancel\n          </Button>\n          <Button onClick={() => setVisible(false)} color=\"primary\">\n            Submit\n          </Button>\n        </div>\n      </Drawer>\n    </>\n  );\n};\n"))))}function h(){return(h=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function v(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}g.isMDXComponent=!0,n.d(t,"default",(function(){return w}));var y={},N="wrapper";function w(e){var t=e.components,n=v(e,["components"]);return Object(r.b)(N,h({},y,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("h1",null,"Drawer"),Object(r.b)("p",null,"A panel which slides in from the edge of the screen."),Object(r.b)("h2",null,"Scenario"),Object(r.b)("p",null,"A Drawer is a panel that is typically overlaid on top of a page and slides in from the side. It contains a set of information or actions. Since the user can interact with the Drawer without leaving the current page, tasks can be achieved more efficiently within the same context."),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},"Use a Form to create or edit a set of information."),Object(r.b)("li",{parentName:"ul"},"Processing sub tasks. When sub tasks are too heavy for a Popover and we still want to keep the subtasks in the context of the main task, Drawer comes very handy."),Object(r.b)("li",{parentName:"ul"},"When the same Form is needed in multiple places.")),Object(r.b)("h2",null,"Usage"),Object(r.b)("pre",null,Object(r.b)("code",h({parentName:"pre"},{className:"language-jsx"}),"import { Drawer } from 'tiny-ui';\n")),Object(r.b)("h2",null,"Examples"),Object(r.b)("layout",null,Object(r.b)("column",null,Object(r.b)(b,{mdxType:"Basic"}),Object(r.b)(g,{mdxType:"Level"})),Object(r.b)("column",null,Object(r.b)(m,{mdxType:"Placement"}))),Object(r.b)("h2",null,"API"),Object(r.b)("table",null,Object(r.b)("thead",{parentName:"table"},Object(r.b)("tr",{parentName:"thead"},Object(r.b)("th",h({parentName:"tr"},{align:null}),"Property"),Object(r.b)("th",h({parentName:"tr"},{align:null}),"Description"),Object(r.b)("th",h({parentName:"tr"},{align:null}),"Type"),Object(r.b)("th",h({parentName:"tr"},{align:null}),"Default"))),Object(r.b)("tbody",{parentName:"table"},Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",h({parentName:"tr"},{align:null}),"placement"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"The placement of the Drawer"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"enum: ",Object(r.b)("inlineCode",{parentName:"td"},"top")," ","|"," ",Object(r.b)("inlineCode",{parentName:"td"},"bottom")," ","|"," ",Object(r.b)("inlineCode",{parentName:"td"},"left")," ","|"," ",Object(r.b)("inlineCode",{parentName:"td"},"right")),Object(r.b)("td",h({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"right"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",h({parentName:"tr"},{align:null}),"size"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"Drawer dialog width or height"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"number ","|"," string"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"256")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",h({parentName:"tr"},{align:null}),"visible"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"Whether the Drawer dialog is visible or not"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"-")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",h({parentName:"tr"},{align:null}),"header"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"Drawer header"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"ReactNode"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"-")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",h({parentName:"tr"},{align:null}),"footer"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"Drawer footer"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"ReactNode"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"-")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",h({parentName:"tr"},{align:null}),"closable"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"Display a close button"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",h({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"true"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",h({parentName:"tr"},{align:null}),"unmountOnClose"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"Whether unmount child components when closing drawer"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"boolean"),Object(r.b)("td",h({parentName:"tr"},{align:null}),Object(r.b)("inlineCode",{parentName:"td"},"true"))),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",h({parentName:"tr"},{align:null}),"style"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"style object of container\tobject"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"CSSProperties"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"-")),Object(r.b)("tr",{parentName:"tbody"},Object(r.b)("td",h({parentName:"tr"},{align:null}),"className"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"className of container"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"string"),Object(r.b)("td",h({parentName:"tr"},{align:null}),"-")))))}w.isMDXComponent=!0}}]);
//# sourceMappingURL=14.bundle.4e3a65636d6f02fd7d39.js.map