{"version":3,"sources":["webpack:///./components/tooltip/demo/basic.md","webpack:///./components/tooltip/demo/arrow.md","webpack:///./components/tooltip/demo/placement.md","webpack:///./components/tooltip/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"srBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,+BACA,4CACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,wG,mkBAaXJ,EAAWK,gBAAiB,EC9B5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,uCACA,4BAAW,0BAAYC,WAAW,KAAvB,iBAAX,mBACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,sH,mkBAaXJ,EAAWK,gBAAiB,EC9B5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,mCACA,kEACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,uuF,mkBAgHXJ,EAAWK,gBAAiB,E,wCC/H5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iCACA,iDACA,kCACA,sBACE,kBAAIC,WAAW,MAAf,0HACA,kBAAIA,WAAW,MAAf,+GAEF,kCACA,0BACF,0BACE,YAAC,EAAD,CAAOD,QAAQ,UACf,YAAC,EAAD,CAAOA,QAAQ,WAEjB,0BACE,YAAC,EAAD,CAAWA,QAAQ,gBAGnB,8BAKJH,EAAWK,gBAAiB","file":"35.bundle.4e510af16ecf6cc72a5a.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Basic`}</h3>\n      <p>{`The simplest usage.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<Tooltip title=\"I'm a tooltip\">\n  <span>Tooltip will show on mouse enter.</span>\n</Tooltip> \n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Disable Arrow`}</h3>\n      <p>{`Set `}<inlineCode parentName=\"p\">{`arrow={false}`}</inlineCode>{` to hide arrow.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`<Tooltip title=\"I'm a tooltip\" arrow={false}>\n  <span>This tooltip doesn't have arrow.</span>\n</Tooltip> \n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Placement`}</h3>\n      <p>{`There are 12 placement options available.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const btnStyle = {\n    width: 80,\n  };\n\n  const content = (\n    <div>\n      <div>This is the content</div>\n      <div>This is the content</div>\n    </div>\n  );\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <td></td>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"top-left\">\n              <Button style={btnStyle}>TL</Button>\n            </Tooltip>\n          </td>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"top-center\">\n              <Button style={btnStyle}>Top</Button>\n            </Tooltip>\n          </td>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"top-right\">\n              <Button style={btnStyle}>TR</Button>\n            </Tooltip>\n          </td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"left-top\">\n              <Button style={btnStyle}>LT</Button>\n            </Tooltip>\n          </td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"right-top\">\n              <Button style={btnStyle}>RT</Button>\n            </Tooltip>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"left-center\">\n              <Button style={btnStyle}>Left</Button>\n            </Tooltip>\n          </td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"right-center\">\n              <Button style={btnStyle}>Right</Button>\n            </Tooltip>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"left-bottom\">\n              <Button style={btnStyle}>LB</Button>\n            </Tooltip>\n          </td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"right-bottom\">\n              <Button style={btnStyle}>RB</Button>\n            </Tooltip>\n          </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"bottom-left\">\n              <Button style={btnStyle}>BL</Button>\n            </Tooltip>\n          </td>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"bottom-center\">\n              <Button style={btnStyle}>Bottom</Button>\n            </Tooltip>\n          </td>\n          <td>\n            <Tooltip title=\"popup text\" placement=\"bottom-right\">\n              <Button style={btnStyle}>BR</Button>\n            </Tooltip>\n          </td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Basic from './demo/basic.md'\nimport Arrow from './demo/arrow.md'\nimport Placement from './demo/placement.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Tooltip`}</h1>\n    <p>{`A simple text popup tip.`}</p>\n    <h2>{`Scenario`}</h2>\n    <ul>\n      <li parentName=\"ul\">{`The tip is shown on mouse enter, and is hidden on mouse leave. The Tooltip doesn't support complex text or operations.`}</li>\n      <li parentName=\"ul\">{`To provide an explanation of a button/text/operation. It's often used instead of the html title attribute.`}</li>\n    </ul>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n    <Arrow mdxType=\"Arrow\" />\n  </column>\n  <column>\n    <Placement mdxType=\"Placement\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}