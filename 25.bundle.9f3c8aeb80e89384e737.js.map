{"version":3,"sources":["webpack:///./components/popover/demo/basic.md","webpack:///./components/popover/demo/placement.md","webpack:///./components/popover/demo/trigger.md","webpack:///./components/popover/demo/controlled.md","webpack:///./components/popover/index.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"srBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,+BACA,4CACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,sR,mkBAwBXJ,EAAWK,gBAAiB,ECzC5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,mCACA,kEACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,m4F,mkBAgHXJ,EAAWK,gBAAiB,ECjI5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,8CACA,wEACA,uBAAK,sBAAMC,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,2pB,mkBAmCXJ,EAAWK,gBAAiB,ECpD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,wBACE,2CACA,4BAAW,0BAAYC,WAAW,KAAvB,WAAX,6CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,OACd,MAAQ,IAHP,glB,mkBAuCXJ,EAAWK,gBAAiB,E,wCCrD5B,IAKMP,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAAC,EAAD,KAAeJ,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAE5E,iCACA,0EACA,kCACA,wFACA,uCAAsB,0BAAYC,WAAW,KAAvB,WAAtB,yBAAmG,0BAAYA,WAAW,KAAvB,WAAnG,6DACA,+BACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,yCAIL,kCACA,0BACF,0BACE,YAAC,EAAD,CAAOD,QAAQ,UACf,YAAC,EAAD,CAAWA,QAAQ,eAErB,0BACE,YAAC,EAAD,CAASA,QAAQ,YACjB,YAAC,EAAD,CAAYA,QAAQ,iBAGpB,8BAKJH,EAAWK,gBAAiB","file":"25.bundle.9f3c8aeb80e89384e737.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Basic`}</h3>\n      <p>{`The simplest usage.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const content = (\n    <div>\n      <div>This is the content</div>\n      <div>This is the content</div>\n    </div>\n  );\n\n  return (\n    <Popover title=\"Title\" content={content}>\n      <Button color=\"primary\">Hover me</Button>\n    </Popover> \n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Placement`}</h3>\n      <p>{`There are 12 placement options available.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const btnStyle = {\n    width: 80,\n  };\n\n  const content = (\n    <div>\n      <div>This is the content</div>\n      <div>This is the content</div>\n    </div>\n  );\n\n  return (\n    <table>\n      <tbody>\n        <tr>\n          <td></td>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"top-left\">\n              <Button style={btnStyle}>TL</Button>\n            </Popover>\n          </td>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"top-center\">\n              <Button style={btnStyle}>Top</Button>\n            </Popover>\n          </td>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"top-right\">\n              <Button style={btnStyle}>TR</Button>\n            </Popover>\n          </td>\n          <td></td>\n        </tr>\n        <tr>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"left-top\">\n              <Button style={btnStyle}>LT</Button>\n            </Popover>\n          </td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"right-top\">\n              <Button style={btnStyle}>RT</Button>\n            </Popover>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"left-center\">\n              <Button style={btnStyle}>Left</Button>\n            </Popover>\n          </td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"right-center\">\n              <Button style={btnStyle}>Right</Button>\n            </Popover>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"left-bottom\">\n              <Button style={btnStyle}>LB</Button>\n            </Popover>\n          </td>\n          <td></td>\n          <td></td>\n          <td></td>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"right-bottom\">\n              <Button style={btnStyle}>RB</Button>\n            </Popover>\n          </td>\n        </tr>\n        <tr>\n          <td></td>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"bottom-left\">\n              <Button style={btnStyle}>BL</Button>\n            </Popover>\n          </td>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"bottom-center\">\n              <Button style={btnStyle}>Bottom</Button>\n            </Popover>\n          </td>\n          <td>\n            <Popover title=\"Title\" content={content} placement=\"bottom-right\">\n              <Button style={btnStyle}>BR</Button>\n            </Popover>\n          </td>\n          <td></td>\n        </tr>\n      </tbody>\n    </table>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Four ways to trigger`}</h3>\n      <p>{`Mouse to click, right click, focus and move in.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const content = (\n    <div>\n      <div>This is the content</div>\n      <div>This is the content</div>\n    </div>\n  );\n\n  return (\n    <>\n      <Popover content={content} title=\"Title\" trigger=\"hover\">\n        <Button>Hover me</Button>\n      </Popover>\n      <Popover content={content} title=\"Title\" trigger=\"focus\">\n        <Button>Focus me</Button>\n      </Popover>\n      <Popover content={content} title=\"Title\" trigger=\"click\">\n        <Button>Click me</Button>\n      </Popover>\n      <Popover content={content} title=\"Title\" trigger=\"context-menu\">\n        <Button>Right Click me</Button>\n      </Popover>\n    </>\n  );\n}\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <demo>\n      <h3>{`Controlled dialog`}</h3>\n      <p>{`Use `}<inlineCode parentName=\"p\">{`visible`}</inlineCode>{` prop to control the display of the card.`}</p>\n      <pre><code parentName=\"pre\" {...{\n          \"className\": \"language-jsx\",\n          \"metastring\": \"live\",\n          \"live\": true\n        }}>{`() => {\n  const [visible, setVisible] = React.useState(false);\n\n  const content = (\n    <Button \n      link \n      onClick={() => setVisible(false)}>\n      Close\n    </Button>\n  );\n\n  return (\n  <>\n    <Popover\n      visible={visible}\n      onVisibleChange={(visible) => setVisible(visible)}\n      trigger=\"click\"\n      title=\"Popover Title\"\n      content={content}>\n      <Button color=\"primary\">\n        Click Me\n      </Button>\n    </Popover>\n    <br/>\n    <br/>\n    <Switch checked={visible} onChange={(visible) => setVisible(visible)}/>\n  </>\n  );\n};\n`}</code></pre>\n    </demo>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;","\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\nimport Basic from './demo/basic.md'\nimport Placement from './demo/placement.md'\nimport Trigger from './demo/trigger.md'\nimport Controlled from './demo/controlled.md'\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    <h1>{`Popover`}</h1>\n    <p>{`The floating card popped by clicking or hovering.`}</p>\n    <h2>{`Scenario`}</h2>\n    <p>{`A simple popup menu to provide extra information or operations.`}</p>\n    <p>{`Comparing with `}<inlineCode parentName=\"p\">{`Tooltip`}</inlineCode>{`, besides information `}<inlineCode parentName=\"p\">{`Popover`}</inlineCode>{` can also provide action elements like links and buttons.`}</p>\n    <h2>{`Usage`}</h2>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import { Popover } from 'tiny-ui';\n`}</code></pre>\n    <h2>{`Examples`}</h2>\n    <layout>\n  <column>\n    <Basic mdxType=\"Basic\" />\n    <Placement mdxType=\"Placement\" />\n  </column>\n  <column>\n    <Trigger mdxType=\"Trigger\" />\n    <Controlled mdxType=\"Controlled\" />\n  </column>\n    </layout>\n    <h2>{`API`}</h2>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}