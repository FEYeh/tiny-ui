{"version":3,"sources":["webpack:///./docs/get-started.md"],"names":["layoutProps","MDXLayout","MDXContent","components","props","mdxType","parentName","isMDXComponent"],"mappings":"8tBAOA,IAKMA,EAAc,GAGdC,EAAY,UACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,EACF,oBACD,OAAO,YAACH,EAAD,KAAeD,EAAiBI,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAC5E,qCACA,iCACA,2CACA,oEAAmD,0BAAYC,WAAW,KAAvB,WAAnD,kCACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,mCAIL,gFACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,yBAIL,2CACA,6FAA4E,0BAAYA,WAAW,KAAvB,QAA5E,gBAA6I,0BAAYA,WAAW,KAAvB,WAA7I,IAAqM,0BAAYA,WAAW,KAAvB,aAArM,QAAmQ,0BAAYA,WAAW,KAAvB,eAAnQ,IAA+T,0BAAYA,WAAW,KAAvB,iBAA/T,UAAmY,sBAAQA,WAAW,KAAnB,gBAAnY,2BACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,iGACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,8MAMvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,kIACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,uNAOzB,+BACA,+FACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,uOAYL,yDACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,iBADZ,8CAIL,iDACA,6IACA,sBACE,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,OAA2B,mBAAGA,WAAW,KAAQ,CAC7C,KAAQ,sDADe,uBAA3B,kBAGA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,kBADI,sKAUrB,iBAAGA,WAAW,MAAd,iLACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,iBADI,wGAMvB,kBAAIA,WAAW,MACb,iBAAGA,WAAW,MAAd,mBACA,mBAAKA,WAAW,MAAK,sBAAMA,WAAW,OAAU,CAC5C,UAAa,iBADI,wMAQzB,8CACA,uBAAK,sBAAMA,WAAW,OAAU,CAC5B,UAAa,kBADZ,m+BAiCTJ,EAAWK,gBAAiB","file":"37.bundle.9f3c8aeb80e89384e737.js","sourcesContent":["\nimport React from 'react'\nimport { mdx } from '@mdx-js/react'\n\n/* @jsx mdx */\n\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\")\n  return <div {...props}/>\n};\n\nconst layoutProps = {\n  \n};\nconst MDXLayout = \"wrapper\"\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`Get Started`}</h1>\n    <h2>{`Install`}</h2>\n    <h3>{`Using npm or yarn`}</h3>\n    <p>{`You first need to install and configure the `}<inlineCode parentName=\"p\">{`Node.js`}</inlineCode>{` environment properly locally.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ npm install tiny-ui --save\n`}</code></pre>\n    <p>{`If you are using yarn you can also install through yarn`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-bash\"\n      }}>{`$ yarn add tiny-ui\n`}</code></pre>\n    <h3>{`Import in Browser`}</h3>\n    <p>{`Add script and link tags in your browser and use the global variable `}<inlineCode parentName=\"p\">{`tiny`}</inlineCode>{`. We provide `}<inlineCode parentName=\"p\">{`tiny.js`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`index.css`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`tiny.min.js`}</inlineCode>{` `}<inlineCode parentName=\"p\">{`index.min.css`}</inlineCode>{` under `}<strong parentName=\"p\">{`tiny-ui/dist`}</strong>{` in tiny's npm package.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Development environment - It is recommended to use an uncompressed version for easy debugging`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-html\"\n          }}>{`<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/tiny-ui@{version_number}/dist/styles/tiny.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/tiny-ui@{version_number}/dist/tiny.js\"></script>\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Production environment - Introduce fixed version and compressed components to ensure code stability and increase loading speed`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-html\"\n          }}>{`<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/tiny-ui@{version_number}/dist/styles/tiny.min.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/tiny-ui@{version_number}/dist/tiny.min.js\"></script>\n`}</code></pre>\n      </li>\n    </ul>\n    <h2>{`Usage`}</h2>\n    <p>{`The following is a simple example of using a default button component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Button } from 'tiny-ui';\n\nconst App = () => {\n  return <Button>Hello World</Button>;\n}\n\nReactDOM.render(<App />, document.getElementById('root'));\n`}</code></pre>\n    <p>{`And import stylesheets manually,`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`import 'tiny-ui/dist/styles/index.css';\n`}</code></pre>\n    <h3>{`Use modularized tiny-ui`}</h3>\n    <p>{`To avoid the problem of packaging files too large in a production environment, load a component depending on demand.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Use `}<a parentName=\"p\" {...{\n            \"href\": \"https://github.com/ant-design/babel-plugin-import\"\n          }}>{`babel-plugin-import`}</a>{` (Recommended)`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-json\"\n          }}>{`// webpack babel loader option or .babelrc\n\n{\n  \"plugins\": [\n    [\"import\", { \"libraryName\": \"tiny-ui\", \"style\": \"css\" }] // \\`style: true\\` for scss\n  ]\n}\n`}</code></pre>\n        <p parentName=\"li\">{`  This allows you to import components from antd without having to manually import the corresponding stylesheet. The antd babel plugin will automatically import stylesheets.`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-jsx\"\n          }}>{`// import js and css modularly, parsed by babel-plugin-import\nimport { Avatar } from 'tiny-ui';\n`}</code></pre>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Manually import`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-jsx\"\n          }}>{`import Avatar from 'tiny-ui/lib/avatar';        // for js\nimport 'tiny-ui/lib/avatar/style/css';          // for css\n// import 'tiny-ui/lib/avatar/style';           // that will import scss\n`}</code></pre>\n      </li>\n    </ul>\n    <h3>{`Use in browser (UMD)`}</h3>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-html\"\n      }}>{`<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title></title>\n    <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/tiny-ui@{version_number}/dist/styles/index.css\" crossorigin>\n    <script src=\"https://cdnjs.cloudflare.com/ajax/libs/babel-standalone/6.26.0/babel.min.js\" crossorigin></script>\n    <script src=\"https://unpkg.com/react@16/umd/react.development.js\" crossorigin></script>\n    <script src=\"https://unpkg.com/react-dom@16/umd/react-dom.development.js\" crossorigin></script>\n\n    <!-- tiny.js must be added following by react.js -->\n    <script src=\"https://cdn.jsdelivr.net/npm/tiny-ui@{version_number}/dist/tiny.js\" crossorigin></script>\n  </head>\n  <body>\n    <div id=\"root\">loading...</div>\n\n    <script type=\"text/babel\">\n      const { Button } = tiny;\n\n      ReactDOM.render(\n        <Button color=\"primary\">Click me</Button>,\n        document.getElementById('root')\n      );\n    </script>\n  </body>\n</html>\n`}</code></pre>\n    </MDXLayout>;\n}\n\n;\nMDXContent.isMDXComponent = true;"],"sourceRoot":""}